interactions:
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0 habanero/1.2.5
      X-USER-AGENT:
      - python-requests/2.31.0 habanero/1.2.5
    method: GET
    uri: https://api.crossref.org/funders?offset=things
  response:
    body:
      string: '{"status":"error","message-type":"exception","message-version":"1.0.0","message":{"name":"class
        java.lang.NullPointerException","description":"java.lang.NullPointerException:
        Cannot invoke \"java.lang.Character.charValue()\" because \"x\" is null","message":"Cannot
        invoke \"java.lang.Character.charValue()\" because \"x\" is null","stack":["clojure.lang.RT.intCast(RT.java:1177)","cayenne.api.v1.query$parse_offset_val.invokeStatic(query.clj:113)","cayenne.api.v1.query$parse_offset_val.invoke(query.clj:112)","cayenne.api.v1.validate$validate_offsets.invokeStatic(validate.clj:111)","cayenne.api.v1.validate$validate_offsets.doInvoke(validate.clj:109)","clojure.lang.RestFn.applyTo(RestFn.java:146)","clojure.core$apply.invokeStatic(core.clj:654)","clojure.core$partial$fn__4761.doInvoke(core.clj:2520)","clojure.lang.RestFn.invoke(RestFn.java:494)","cayenne.api.v1.validate$validate_paging_params.invokeStatic(validate.clj:428)","cayenne.api.v1.validate$validate_paging_params.invoke(validate.clj:391)","cayenne.api.v1.validate$validate_resource_context.invokeStatic(validate.clj:600)","cayenne.api.v1.validate$validate_resource_context.invoke(validate.clj:592)","cayenne.api.v1.validate$malformed_QMARK_$fn__26188.invoke(validate.clj:629)","liberator.core$decide.invokeStatic(core.clj:82)","liberator.core$decide.invoke(core.clj:74)","liberator.core$malformed_QMARK_.invokeStatic(core.clj:490)","liberator.core$malformed_QMARK_.invoke(core.clj:490)","liberator.core$decide.invokeStatic(core.clj:87)","liberator.core$decide.invoke(core.clj:74)","liberator.core$method_allowed_QMARK_.invokeStatic(core.clj:493)","liberator.core$method_allowed_QMARK_.invoke(core.clj:493)","liberator.core$decide.invokeStatic(core.clj:87)","liberator.core$decide.invoke(core.clj:74)","liberator.core$uri_too_long_QMARK_.invokeStatic(core.clj:496)","liberator.core$uri_too_long_QMARK_.invoke(core.clj:496)","liberator.core$decide.invokeStatic(core.clj:87)","liberator.core$decide.invoke(core.clj:74)","liberator.core$known_method_QMARK_.invokeStatic(core.clj:499)","liberator.core$known_method_QMARK_.invoke(core.clj:499)","liberator.core$decide.invokeStatic(core.clj:87)","liberator.core$decide.invoke(core.clj:74)","liberator.core$service_available_QMARK_.invokeStatic(core.clj:502)","liberator.core$service_available_QMARK_.invoke(core.clj:502)","liberator.core$decide.invokeStatic(core.clj:87)","liberator.core$decide.invoke(core.clj:74)","liberator.core$initialize_context.invokeStatic(core.clj:504)","liberator.core$initialize_context.invoke(core.clj:504)","liberator.core$run_resource.invokeStatic(core.clj:595)","liberator.core$run_resource.invoke(core.clj:593)","cayenne.api.v1.routes$funders_resource.invokeStatic(routes.clj:204)","cayenne.api.v1.routes$funders_resource.invoke(routes.clj:204)","compojure.response$eval28429$fn__28430.invoke(response.clj:47)","compojure.response$eval28351$fn__28352$G__28342__28359.invoke(response.clj:7)","compojure.core$wrap_response$fn__28901.invoke(core.clj:158)","compojure.core$pre_init$fn__28998.invoke(core.clj:328)","cayenne.api.auth.apikey$wrap_auth_when_enabled$fn__33863.invoke(apikey.clj:67)","compojure.core$pre_init$fn__29000$fn__29003.invoke(core.clj:335)","compojure.core$wrap_route_middleware$fn__28885.invoke(core.clj:127)","compojure.core$wrap_route_info$fn__28890.invoke(core.clj:137)","compojure.core$wrap_route_matches$fn__28894.invoke(core.clj:146)","compojure.core$routing$fn__28909.invoke(core.clj:185)","clojure.core$some.invokeStatic(core.clj:2592)","clojure.core$some.invoke(core.clj:2583)","compojure.core$routing.invokeStatic(core.clj:185)","compojure.core$routing.doInvoke(core.clj:182)","clojure.lang.RestFn.applyTo(RestFn.java:139)","clojure.core$apply.invokeStatic(core.clj:648)","clojure.core$apply.invoke(core.clj:641)","compojure.core$routes$fn__28913.invoke(core.clj:192)","compojure.core$routing$fn__28909.invoke(core.clj:185)","clojure.core$some.invokeStatic(core.clj:2592)","clojure.core$some.invoke(core.clj:2583)","compojure.core$routing.invokeStatic(core.clj:185)","compojure.core$routing.doInvoke(core.clj:182)","clojure.lang.RestFn.applyTo(RestFn.java:139)","clojure.core$apply.invokeStatic(core.clj:648)","clojure.core$apply.invoke(core.clj:641)","compojure.core$routes$fn__28913.invoke(core.clj:192)","compojure.core$routing$fn__28909.invoke(core.clj:185)","clojure.core$some.invokeStatic(core.clj:2592)","clojure.core$some.invoke(core.clj:2583)","compojure.core$routing.invokeStatic(core.clj:185)","compojure.core$routing.doInvoke(core.clj:182)","clojure.lang.RestFn.applyTo(RestFn.java:139)","clojure.core$apply.invokeStatic(core.clj:648)","clojure.core$apply.invoke(core.clj:641)","compojure.core$routes$fn__28913.invoke(core.clj:192)","compojure.core$wrap_routes$fn__29010.invoke(core.clj:348)","cayenne.api.route$wrap_async$fn__35295.invoke(route.clj:249)","ring.middleware.keyword_params$wrap_keyword_params$fn__34820.invoke(keyword_params.clj:38)","ring.middleware.nested_params$wrap_nested_params$fn__34868.invoke(nested_params.clj:91)","ring.middleware.params$wrap_params$fn__34784.invoke(params.clj:69)","cayenne.api.route$wrap_cors$fn__35259.invoke(route.clj:153)","cayenne.api.route$wrap_heartbeat$fn__35301.invoke(route.clj:274)","cayenne.api.conneg$wrap_accept$fn__28139.invoke(conneg.clj:53)","cayenne.api.route$wrap_exception_handler$fn__35274.invoke(route.clj:203)","cayenne.api.route$wrap_ignore_trailing_slash$fn__35277.invoke(route.clj:211)","ring.middleware.gzip$wrap_gzip$fn__34348.invoke(gzip.clj:102)","ring.logger$wrap_log_request_start$fn__34279.invoke(logger.clj:101)","ring.logger$wrap_log_response$fn__34292.invoke(logger.clj:175)","cayenne.api.route$wrap_raise$fn__35306.invoke(route.clj:279)","ring.adapter.jetty$async_proxy_handler$fn__34528.invoke(jetty.clj:59)","ring.adapter.jetty.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle(Unknown
        Source)","org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)","org.eclipse.jetty.server.Server.handle(Server.java:516)","org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:388)","org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:633)","org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:380)","org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:277)","org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)","org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)","org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)","org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)","org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)","org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)","org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)","org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:383)","org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:882)","org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1036)","java.base\/java.lang.Thread.run(Thread.java:1583)"],"cause":null}}'
    headers:
      connection:
      - close
      content-type:
      - application/json
      date:
      - Tue, 16 Jan 2024 00:23:51 GMT
      exception-name:
      - class java.lang.NullPointerException
      permissions-policy:
      - interest-cohort=()
      server:
      - Jetty(9.4.40.v20210413)
      transfer-encoding:
      - chunked
      x-api-pool:
      - public
      x-rate-limit-interval:
      - 1s
      x-rate-limit-limit:
      - '50'
      x-ratelimit-interval:
      - 1s
      x-ratelimit-limit:
      - '50'
    status:
      code: 500
      message: Server Error
version: 1
